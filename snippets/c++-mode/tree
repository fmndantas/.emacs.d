# -*- mode: snippet -*-
# name: tree
# key: tree
# --
void tree() {
  int n = 100000;
  cout << n << '\n';
  vector<pair<int, int>> edges;
  for (int i = 2; i <= n; ++i) {
    edges.emplace_back(mt() % (i - 1) + 1, i);
  }
  vector<int> perm(n + 1);
  for (int i = 0; i <= n; ++i) {
    perm[i] = i;
  }
  random_shuffle(perm.begin() + 1, perm.end());
  random_shuffle(edges.begin(), edges.end());  
  for (pair<int, int> edge : edges) {
    int a = edge.first, b = edge.second;
    if (mt() % 2) {
      swap(a, b);
    }
    cout << perm[a] << ' ' << perm[b] << ' ' << '\n';
  }
}
